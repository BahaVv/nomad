Predicted rings do not visually update.

Algorithm does not presently jump to second case described in paper -- that is,
the algorithm presently gives up after not finding the user in the first access
point.

Algorithm currently halts after reaching intended access point. The proper math for following the ring to check the user is this:

robot @ point (x,y)
midpt @ (a,b)

X = x-a
Y = y-b

r = sqrt(X^2+Y^2)
0 = atan2(Y,X)
01 = asin(1px/r)

0' = 0 + 01

X' = rcos0'
Y' = rsin0'

robot.x = X'+a
robot.y = Y'+b 

There were issues getting this math to translate to C properly, which is why it isn't present. 


-----


The points2Actions node sends actions composed of the goal points passed to it by the 
visualizer to the move_base node.  This is not fully correct, there are still issues with
the costmap, the reference frame, and other things.  You should expect to see the first goal sent, 
but no other goals, because the points2Actions node will not receive a proper response.  Move_base should be 
logging the first goal sent to it, and getting confused about what to do.  

The disconnect here, I believe is mostly time.  We did not shift focus to simmulation early 
enough at all, which put us into a massive time crush, leaving insufficient time to deal with 
all of the issues and learn all of the information about stage simulation.
